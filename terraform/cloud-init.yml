#cloud-config
# Construido sobre: https://cloudinit.readthedocs.io/en/latest/reference/base_config_reference.html#example
# Construido sobre: https://developer.hashicorp.com/terraform/tutorials/provision/cloud-init
# Construido sobre: https://www.digitalocean.com/community/tutorials/an-introduction-to-cloud-config-scripting

groups:
  - docker

disable_root: true

system_info:
  # This will affect which distro class gets used
  distro: ubuntu
  # Default user name + that default users groups (if added/used)
  default_user:
    name: ubuntu
    doas:
      - permit nopass ubuntu
    lock_passwd: true
    gecos: Ubuntu
    groups: [adm, cdrom, dip, lxd, sudo]
    sudo: ["ALL=(ALL) NOPASSWD:ALL"]
    shell: /bin/bash
    ssh_authorized_keys:
      - ecdsa-sha2-nistp521 AAAAE2VjZHNhLXNoYTItbmlzdHA1MjEAAAAIbmlzdHA1MjEAAACFBAC7gHmnuL9wZC5ppTx0T0nkb1arlx+l1ff7MiV+2X2jJ0CidgDPk36FF/rYlDAoXC864hk4cN/fjz8S7AJ8m5RT1ACBGkEPGzhvH+9gTYsZQdBWxLtQ4IxDm5LxhjD9wNGlwCRRvnAfRovcqHS6gD8d0IZMyZJUHjOjaptJ+yv8TjPuGQ== Llave administrador

users:
  - default
  - name: ghost
    gechcos: Ghost
    groups: docker
    shell: /bin/bash
    lock_passwd: true # Deny users to log in with a password.
    ssh_authorized_keys:
      - ecdsa-sha2-nistp521 AAAAE2VjZHNhLXNoYTItbmlzdHA1MjEAAAAIbmlzdHA1MjEAAACFBADLtmppm3HoMqvM1paxvY1uJaDXeaLD1UWcZuhpaKENSxunuBS6RZnv1GrckwEC1GojxziDtrfLksF6jDC9kPdGCgFq5SrZtMzoFudwYtUgrE0VqCq2ozFOBXvXB8ryi9gLbVGKVH0iSSvhSmLxUAGEw9nTIpbxd+/sYLq3yc4JPdgYTQ== Llave ghost

timezone: America/Bogota

keyboard:
  layout: latam

# Distro maintainers provide unofficial distributions of Docker packages in APT.
# No es perfecto, pero es una forma de instalar Docker en Ubuntu.
packages:
  - apt:
    - ufw
    - nginx
    - docker.io
    - docker-compose
    - python3-certbot-nginx
  - snap:
    - certbot
package_update: true
package_upgrade: true
package_reboot_if_required: true

# Module frequency: once-per-instance (Perfecto pues certbot despues modificara el archivo)
write_files:
  - path: /etc/nginx/sites-available/ghost.appbajopruebas.com
    content: |
      server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name ghost.appbajopruebas.com, www.ghost.appbajopruebas.com;
        location / {
          proxy_pass http://localhost:8080;
        }
      }

runcmd:
  # Levantar el servicio de Docker y la aplicacion de Ghost
  - [ systemctl, start, docker ]
  - [ sytemctl, enable, docker ]
  - [ wget, "https://raw.githubusercontent.com/aanieves/Ghost/main/docker/docker-compose.yml", -O, /home/ghost/docker-compose.yml ]
  - [ chown, ghost:docker, /home/ghost/docker-compose.yml ]
  - [ su, ghost, -c, "docker-compose -f /home/ghost/docker-compose.yml up -d --build" ]
  # Configurar el servidor web
  - [ ln, -s, /etc/nginx/sites-available/ghost.appbajopruebas.com, /etc/nginx/sites-enabled/ghost.appbajopruebas.com ]
  - [ rm, /etc/nginx/sites-enabled/default ]
  - [ systemctl, start, nginx ]
  - [ systemctl, enable, nginx ]
  - [ certbot, --nginx, -d, ghost.appbajopruebas.com, -d, www.ghost.appbajopruebas.com, --non-interactive, --agree-tos, --email, automatizacion@appbajopruebas.com ]
  - [ systemctl, restart, nginx ]
  # Configurar el firewall
  - [ ufw, default, deny, incoming ]
  - [ ufw, default, allow, outgoing ]
  - [ ufw, allow, in, on, lo ]
  - [ ufw, allow, from, 127.0.0.1/8 ]
  - [ ufw, allow, 'Nginx Full']
  - [ ufw, allow, 'OpenSSH']
  - [ ufw, enable ]
